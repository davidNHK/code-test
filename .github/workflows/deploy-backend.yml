name: Deploy systems/backend

on:
  push:
    branches:
      - master
    paths:
      - 'systems/backend/**'

env:
  AWS_DEFAULT_REGION: eu-west-2
  LAMBDA_FUNCTION_ARN: arn:aws:lambda:eu-west-2:139227058951:function:code-test-lambda-9efb696
  ECR_IMAGE_NAME: code-test-image-092187c
  ECR_REPO: 139227058951.dkr.ecr.eu-west-2.amazonaws.com
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.0.0
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: eu-west-2
      - run: bash ./scripts/setup.sh
      - run: npx lerna exec --stream --concurrency 1 --scope=backend -- bash scripts/ci/setup.sh
      - run: npx lerna exec --stream --concurrency 1 --scope=backend -- bash scripts/ci/deploy.sh
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          LAMBDA_FUNCTION_ARN: ${{ secrets.LAMBDA_FUNCTION_ARN }}
          ECR_IMAGE_NAME: ${{ secrets.ECR_IMAGE_NAME }}
          ECR_REPO: ${{ secrets.ECR_REPO }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
